using System.Threading.Tasks;
{{#hasImport}}using {{packageName}}.{{modelPackage}};
{{/hasImport}}

namespace {{packageName}}.Client {
    {{#operations}}
    /// <summary>
    /// Represents an interface to interact with the {{classname}} API endpoints
    /// </summary>
    {{>visibility}} interface {{interfacePrefix}}{{classname}} {
        {{#operation}}

        /// <summary>
        /// {{summary}}
        /// </summary>
        {{#allParams}}/// <param name="{{paramName}}">{{description}}{{^required}}{{#isBodyParam}} The request body{{/isBodyParam}}{{^isBodyParam}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/isBodyParam}}{{/required}}</param>
        {{/allParams}}/// <returns>Task of {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}void{{/returnType}}</returns>
        {{#returnType}}Task<{{#returnTypePackageName}}{{{returnTypePackageName}}}.{{/returnTypePackageName}}{{{returnType}}}>{{/returnType}}{{^returnType}}System.Threading.Tasks.Task{{/returnType}} {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}}{{^isBodyParam}} = null{{/isBodyParam}}{{/optionalMethodArgument}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
        {{/operation}}
    }
    /// <summary>
    /// Represents a collection of functions to interact with the {{classname}} API endpoints
    /// </summary>
    {{>visibility}} partial class MarqetaClient {
        {{#operation}}

        /// <summary>
        /// {{summary}}
        /// </summary>
        {{#allParams}}/// <param name="{{paramName}}">{{description}}{{^required}}{{#isBodyParam}} The request body{{/isBodyParam}}{{^isBodyParam}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/isBodyParam}}{{/required}}</param>
        {{/allParams}}/// <returns>Task of {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}void{{/returnType}}</returns>
        public {{#returnType}}Task<{{#returnTypePackageName}}{{{returnTypePackageName}}}.{{/returnTypePackageName}}{{{returnType}}}>{{/returnType}}{{^returnType}}System.Threading.Tasks.Task{{/returnType}} {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}}{{^isBodyParam}} = null{{/isBodyParam}}{{/optionalMethodArgument}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}){
            return {{httpMethod}}{{#returnType}}{{#returnTypePackageName}}{{{returnTypePackageName}}}.{{/returnTypePackageName}}<{{{returnType}}}>{{/returnType}}(
                "{{{path}}}",
                {{^pathParams}}null,//{{/pathParams}}new() { {{#pathParams}}{ "{{paramName}}", {{paramName}} }{{#hasMore}}, {{/hasMore}}{{/pathParams}} },
                {{^queryParams}}null{{#bodyParam}},{{/bodyParam}}//{{/queryParams}}new() { {{#queryParams}}{ "{{paramName}}", {{paramName}} }{{#hasMore}}, {{/hasMore}}{{/queryParams}} }{{#bodyParam}},
                {{paramName}}{{/bodyParam}}
            );
        }
        {{/operation}}
    }
    {{/operations}}
}
